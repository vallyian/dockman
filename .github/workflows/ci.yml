name: ci

on:
    push:
        branches: [main]
        paths-ignore:
            - ".vscode/**"
            - "**/*.md"
    pull_request:
        branches: [main]
        paths-ignore:
            - ".vscode/**"
            - "**/*.md"
    workflow_dispatch:
        inputs:
            publish_image:
                description: "Push runtime image to Docker Hub"
                default: "false"
                required: false

jobs:
    semver:
        name: Semantic version
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0

            - name: Github env
              id: github_env
              env:
                  GITHUB_MAIN: ${{ github.ref == 'refs/heads/main' }}
              run: node run ci_github_env

            - name: Tag version
              id: tag_version
              uses: mathieudutour/github-tag-action@fcfbdceb3093f6d85a3b194740f8c6cec632f4e2 # v6.1
              with:
                  github_token: ${{ secrets.GITHUB_TOKEN }}
                  dry_run: ${{ steps.github_env.outputs.GITHUB_MAIN != 'true' }}
                  create_annotated_tag: true
                  release_branches: "^main$"

            - name: Calc semver
              id: calc_semver
              env:
                  GITHUB_SHA: ${{ github.sha }}
                  GITHUB_MAIN: ${{ steps.github_env.outputs.GITHUB_MAIN }}
                  SEMVER: ${{ steps.tag_version.outputs.new_version }}
              run: node run ci_calc_semver

        outputs:
            GITHUB_MAIN: ${{ steps.github_env.outputs.GITHUB_MAIN }}
            SEMVER: ${{ steps.calc_semver.outputs.SEMVER }}

    build-test:
        name: Build and test
        runs-on: ubuntu-latest
        needs: ["semver"]
        env:
            DOCKER_REPO: dockman
            SEMVER: ${{ needs.semver.outputs.SEMVER }}

        steps:
            - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0

            - uses: docker/setup-qemu-action@e81a89b1732b9c48d79cd809d8d81d79c4647a18 # v2.1.0

            - uses: docker/setup-buildx-action@15c905b16b06416d2086efa066dd8e3a35cc7f98 # v2.4.0

            - name: Build, test and extract artifacts
              run: node run ci_build

            - name: Upload server runtime
              uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
              if: always()
              with:
                  name: server-runtime
                  path: artifacts/runtime

            - name: Upload test results
              uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
              if: always()
              with:
                  name: test-results
                  path: artifacts/test-results

            - name: Check test results
              run: node run ci_check_test_results

            - name: Publish Test Results
              uses: EnricoMi/publish-unit-test-result-action@a3caf02865c0604ad3dc1ecfcc5cdec9c41b7936 # v2.3.0
              if: always()
              with:
                  github_token: ${{secrets.GITHUB_TOKEN}}
                  junit_files: artifacts/test-results/*.xml
                  fail_on: "test failures"

            - name: Scan runtime image
              env:
                  DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}}
              run: node run ci_scan

            - name: Log in to Docker Hub
              uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # v2.1.0
              if: ${{ needs.semver.outputs.GITHUB_MAIN == 'true' || github.event.inputs.publish_image == 'true' }}
              with:
                  username: ${{secrets.DOCKER_USERNAME}}
                  password: ${{secrets.DOCKER_PASSWORD}}

            - name: Build and push multiplatform runtime image to Docker Hub
              if: ${{ needs.semver.outputs.GITHUB_MAIN == 'true' || github.event.inputs.publish_image == 'true' }}
              env:
                  DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}}
              run: node run ci_push
